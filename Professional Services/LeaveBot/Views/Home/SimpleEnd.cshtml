@model Tuple<ProfessionalServices.LeaveBot.Models.Employee, List<ProfessionalServices.LeaveBot.Models.LeaveExtended>, List<ProfessionalServices.LeaveBot.Models.ManagerDetails>>
<!DOCTYPE html>
<html>

<head>

    <title>Simple Authentication Sample Login</title>

</head>

<body>

    <script src="https://statics.teams.microsoft.com/sdk/v1.0/js/MicrosoftTeams.min.js" integrity="sha384-SNENyRfvDvybst1u0LawETYF6L5yMx5Ya1dIqWoG4UDTZ/5UAMB15h37ktdBbyFh" crossorigin="anonymous"></script>
    <script src='https://code.jquery.com/jquery-1.11.3.min.js'></script>


    <script type="text/javascript">

            microsoftTeams.initialize();

            localStorage.removeItem("simple.error");



            let hashParams = getHashParameters();

            if (hashParams["error"]) {

                // Authentication/authorization failed

                localStorage.setItem("simple.error", JSON.stringify(hashParams));

                microsoftTeams.authentication.notifyFailure(hashParams["error"]);

            } else if (hashParams["access_token"]) {

                // Get the stored state parameter and compare with incoming state

                let expectedState = localStorage.getItem("simple.state");

                if (expectedState !== hashParams["state"]) {

                    // State does not match, report error

                    localStorage.setItem("simple.error", JSON.stringify(hashParams));

                    microsoftTeams.authentication.notifyFailure("StateDoesNotMatch");

                } else {
                    var acces = hashParams["access_token"]
                    // Success -- return token information to the parent page

                    //microsoftTeams.authentication.notifySuccess({

                    //    idToken: hashParams["id_token"],

                    //    accessToken: hashParams["access_token"],

                    //    tokenType: hashParams["token_type"],

                    //    expiresIn: hashParams["expires_in"],

                    //    UserId: hashParams["userPrincipalName"]


                    //})
                    getUserProfile(acces);
                     
                }

            } else {

                // Unexpected condition: hash does not contain error or access_token parameter

                localStorage.setItem("simple.error", JSON.stringify(hashParams));

                microsoftTeams.authentication.notifyFailure("UnexpectedFailure");

            }



            // Parse hash parameters into key-value pairs

            function getHashParameters() {

                let hashParams = {};

                location.hash.substr(1).split("&").forEach(function(item) {

                    let s = item.split("="),

                    k = s[0],

                    v = s[1] && decodeURIComponent(s[1]);

                    hashParams[k] = v;

                });

                return hashParams;

        }
        function getUserProfile(accessToken) {

            $.ajax({

                url: "https://graph.microsoft.com/v1.0/me/",

                beforeSend: function (request) {

                    request.setRequestHeader("Authorization", "Bearer " + accessToken);

                },

                success: function (profile) {
                    var name = profile.userPrincipalName;
                    window.location = "@ProfessionalServices.LeaveBot.Helper.ApplicationSettings.BaseUrl" + "/?Emailid=" + name;

                },

                error: function (xhr, textStatus, errorThrown) {

                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);

                    $("#divError").text(errorThrown).css({ display: "" });

                    $("#divProfile").css({ display: "none" });

                },

            });

        }

    </script>

</body>

</html>